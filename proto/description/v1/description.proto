// SPDX-FileCopyrightText: 2020 Brent Rubell for Adafruit Industries
// SPDX-License-Identifier: MIT
// Messages for describing hardware over the `/device/ID/description` topic
syntax = "proto3";

package description.v1;

// Request sent by device to Adafruit IO to select or update a device's board definition
// MQTT Topic: `/device/ID/description/update`
message CreateDescriptionRequest {
    string uid          = 1; // serial number
    string machine_name = 2; // Machine name
    Version version     = 3; // Library version

    // Semantic version message
    message Version {
        uint64 major = 1;
        uint64 minor = 2;
        uint64 micro = 3;
        string label = 4;
    }
}

// Response sent by Adafruit IO to the hardware
// MQTT Topic: `/device/ID/description/update`
message CreateDescriptionResponse {
    Response response = 1; // Response type

    enum Response {
        RESPONSE_UNSPECIFIED   = 0; // Invalid response from server
        RESPONSE_OK            = 1; // Board found within definition index
        RESPONSE_INVALID_BOARD = 2; // Board name not found within definition index
        RESPONSE_INVALID_MAC   = 3; // Invalid MAC address format provided
    }
}

// Request the board definition JSON from a device
// MQTT Topic: `device/ID/description/get`
message GetDefinitionRequest {
    string data = 1; // Request may be any UTF-8 string value
}

// Response from Adafruit IO with the JSON board definition as a string
// MQTT Topic: `device/ID/description/get`
message GetDefinitionResponse {
    string board_definition = 1; // Response is JSON data encoded as a string
}