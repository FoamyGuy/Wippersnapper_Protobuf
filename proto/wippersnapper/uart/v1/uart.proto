// SPDX-FileCopyrightText: 2023 Brent Rubell for Adafruit Industries
// SPDX-License-Identifier: MIT
syntax = "proto3";

package wippersnapper.uart.v1;
import "nanopb/nanopb.proto";

/**
* UARTInitRequest represents a message sent from IO to a device to configure
* and begin UART communication.
*/
message UARTInitRequest {
  int32 baudrate        = 1; /** The baudrate to use for UART communication (may be a common baud rate such as: 1200bps, 2400bps, 4800bps, 19200bps, 38400bps, 57600bps, or 115200bps). */
  string pin_rx         = 2; /** The pin on which to receive UART stream data. */
  string pin_tx         = 3; /** The pin on which to transmit UART stream data. */
  bool is_invert        = 4; /** Inverts the UART signal on RX and TX pins. Defaults to False. */
  bool is_software_uart = 5; /** Enables software UART. Defaults to False. */
}

/**
* UARTInitResponse represents a message sent from a device to IO to confirm
* that UART communication has been initialized.
*/
message UARTInitResponse {
  bool success = 1; /** True if the UARTInitRequest was successful, False otherwise. */
}

/**
* UARTDeviceAttachRequest represents a message sent from IO to a device
* after UART communication has been initialized to attach a device to the
* UART bus.
*/
message UARTDeviceAttachRequest {
  string device_id       = 1; /** The unique identifier of the device to attach to the UART bus, from Adafruit_WipperSnapper_Components. */
  int32 polling_interval = 2; /** The polling interval, in milliseconds, to use for the device. */
}

/**
* UARTDeviceAttachResponse represents a message sent from a device to IO to
* confirm that a device has been attached to the UART bus.
*/
message UARTDeviceAttachResponse {
  string device_id = 1; /** The unique identifier of the device to attach to the UART bus, from Adafruit_WipperSnapper_Components. */
  bool success     = 2; /** True if the UARTInitRequest was successful, False otherwise. */
}
