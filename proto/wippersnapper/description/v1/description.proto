// SPDX-FileCopyrightText: 2020 Brent Rubell for Adafruit Industries
// SPDX-License-Identifier: MIT
// Messages for describing hardware over the description topic
syntax = "proto3";

package wippersnapper.description.v1;

// Request sent by device to Adafruit IO to select
// or update a device's board definition
// MQTT Topic: `/devices/description/`
message CreateDescriptionRequest {
  string machine_name = 1; // Board identifier string
  int32 mac_addr      = 2; // Last 3 bytes of device MAC address
  int32 usb_vid       = 3; // Optional USB Vendor ID
  int32 usb_pid       = 4; // Optional USB Product ID
  Version version     = 5; // Wippersnapper library version

  // Semantic Version
  message Version {
    uint64 major = 1;
    uint64 minor = 2;
    uint64 micro = 3;
    string label = 4;
  }
}


// ACK Response sent from Adafruit IO to a board upon CreateDescriptionRequest
// MQTT Topic: `/device/myDevice/description/status/device`
message BrokerDescriptionResponse {
  Response response = 1; // Response type

  enum Response {
    RESPONSE_UNSPECIFIED     = 0; // Invalid response from server
    RESPONSE_OK              = 1; // Board found within definition index
    RESPONSE_BOARD_NOT_FOUND = 2; // Board not found in definition index
  }
}

// ACK Response sent from a device to Adafruit IO upon BrokerDescriptionResponse
// MQTT Topic: `/device/myDevice/description/status/device`
message DeviceDescriptionResponse {
  Response response = 1; // Response type

  enum Response {
    // Invalid response from server
    RESPONSE_UNSPECIFIED   = 0;
    // Device transitioning to idle state
    RESPONSE_READY         = 1;
    // Device transitioning to disconnect state
    RESPONSE_DISCONNECTING = 2;
  }
}

// Request the board definition JSON from a device
// MQTT Topic: `device/ID/description/get`
message GetDefinitionRequest {
  string data = 1; // Request may be any UTF-8 string value
}

// Response from Adafruit IO with the JSON board definition as a string
// MQTT Topic: `device/ID/description/get`
message GetDefinitionResponse {
  string board_definition = 1; // Response is JSON data encoded as a string
}
