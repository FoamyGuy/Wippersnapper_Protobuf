// SPDX-FileCopyrightText: 2020 Brent Rubell for Adafruit Industries
// SPDX-License-Identifier: MIT
// Messages for describing hardware over the description topic
syntax = "proto3";

package wippersnapper.description.v1;
import "nanopb/nanopb.proto";

/**
* Request from client identifying itself.
* Client must provide:
* a) Physical identifier, machine_name
* b) Unique identifier, mac_addr
*/
message CreateDescriptionRequest {
  string machine_name = 1 [(nanopb).max_size = 64]; /** Identifies client's physical hardware */
  int32 mac_addr      = 2; /** Client's UID, last 3 bytes of MAC address */
  int32 usb_vid       = 3; /** Optional, USB Vendor ID */
  int32 usb_pid       = 4; /** Optional, USB Product ID */
  Version version     = 5; /** Optional, client's library version */

  // Semantic Version
  message Version {
    uint64 major = 1;
    uint64 minor = 2;
    uint64 micro = 3;
    string label = 4;
  }
}

/**
* Response of a CreateDescriptionRequest from IO to a client.
*/
message CreateDescriptionResponse {
  Response response        = 1; /** Specifies if the hardware definition exists on the server. */
  int32 total_gpio_pins    = 2; /** Specifies the number of GPIO pins on the client's physical hardware. */
  int32 total_analog_pins  = 3; /** Specifies the number of analog pins on the client's physical hardware. */
  float reference_voltage  = 4 [deprecated=true]; /** Specifies the hardware's default reference voltage. */

  /**
   * Response. Specifies if the hardware definiton is within the database.
   */
  enum Response {
    RESPONSE_UNSPECIFIED     = 0; /** Invalid response from server */
    RESPONSE_OK              = 1; /** Board found within definition index */
    RESPONSE_BOARD_NOT_FOUND = 2; /** Board not found in definition index */
  }
}

// Request the board definition JSON from a device
// MQTT Topic: `device/ID/description/get`
message GetDefinitionRequest {
  string data = 1 [deprecated=true]; // Request may be any UTF-8 string value
}

// Response from Adafruit IO with the JSON board definition as a string
// MQTT Topic: `device/ID/description/get`
message GetDefinitionResponse {
  string board_definition = 1 [deprecated=true]; // Response is JSON data encoded as a string
}
